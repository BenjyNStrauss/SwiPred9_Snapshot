package modules.descriptor.vkbat.dsc;

import assist.translation.cplusplus.CTranslator;

/**
 * 
 * @translator Benjy Strauss
 *
 */

public class EstimateProbs extends CTranslator {
	
	/* probs of different classes based on empirical results, 
	the direct analytical values are difficult to obtain and 
	not neccesarly any more accurate */

	static double probs[][] = { 	
	   {0.443,0.344,0.213},
	   {0.416,0.348,0.236},
	   {0.510,0.314,0.176},
	   {0.524,0.381,0.095},
	   {0.603,0.167,0.230},
	   {0.542,0.301,0.157},
	   {0.734,0.233,0.033},
	   {0.667,0.267,0.067},
	   {0.686,0.149,0.165},
	   {0.851,0.085,0.064},
	   {0.857,0.048,0.095},
	   {0.980,0.010,0.010},
	   {0.910,0.036,0.054},
	   {0.914,0.052,0.034},
	   {0.980,0.010,0.010},
	   {0.980,0.010,0.010},
	   {0.422,0.216,0.362},
	   {0.519,0.156,0.325},
	   {0.484,0.118,0.398},
	   {0.517,0.046,0.437},
	   {0.621,0.113,0.266},
	   {0.662,0.080,0.259},
	   {0.626,0.096,0.278},
	   {0.589,0.036,0.375},
	   {0.745,0.119,0.136},
	   {0.790,0.067,0.143},
	   {0.751,0.065,0.184},
	   {0.723,0.020,0.257},
	   {0.893,0.032,0.075},
	   {0.945,0.014,0.041},
	   {0.905,0.015,0.080},
	   {0.877,0.004,0.119},
	   {0.292,0.491,0.217},
	   {0.323,0.516,0.161},
	   {0.259,0.611,0.130},
	   {0.404,0.586,0.010},
	   {0.238,0.561,0.201},
	   {0.276,0.512,0.212},
	   {0.309,0.681,0.010},
	   {0.066,0.924,0.010},
	   {0.126,0.680,0.194},
	   {0.098,0.771,0.131},
	   {0.097,0.806,0.097},
	   {0.010,0.980,0.010},
	   {0.046,0.867,0.087},
	   {0.055,0.931,0.014},
	   {0.029,0.961,0.010},
	   {0.010,0.933,0.057},
	   {0.198,0.418,0.384},
	   {0.092,0.511,0.397},
	   {0.070,0.466,0.464},
	   {0.056,0.476,0.468},
	   {0.163,0.589,0.248},
	   {0.102,0.624,0.274},
	   {0.087,0.608,0.307},
	   {0.045,0.613,0.342},
	   {0.144,0.648,0.208},
	   {0.094,0.650,0.256},
	   {0.026,0.696,0.278},
	   {0.026,0.661,0.313},
	   {0.027,0.888,0.085},
	   {0.025,0.888,0.087},
	   {0.013,0.888,0.099},
	   {0.020,0.831,0.149},
	   {0.302,0.299,0.399},
	   {0.393,0.150,0.457},
	   {0.319,0.128,0.553},
	   {0.366,0.042,0.592},
	   {0.249,0.234,0.517},
	   {0.239,0.180,0.581},
	   {0.210,0.090,0.700},
	   {0.255,0.051,0.694},
	   {0.189,0.134,0.677},
	   {0.189,0.138,0.673},
	   {0.207,0.122,0.671},
	   {0.185,0.021,0.794},
	   {0.110,0.069,0.821},
	   {0.070,0.040,0.890},
	   {0.091,0.027,0.882},
	   {0.087,0.020,0.893},
	   {0.275,0.330,0.395},
	   {0.130,0.429,0.441},
	   {0.181,0.348,0.471},
	   {0.067,0.365,0.568},
	   {0.194,0.267,0.539},
	   {0.145,0.192,0.665},
	   {0.119,0.260,0.621},
	   {0.047,0.240,0.713},
	   {0.091,0.215,0.694},
	   {0.101,0.175,0.725},
	   {0.086,0.160,0.754},
	   {0.059,0.209,0.732},
	   {0.088,0.085,0.827},
	   {0.062,0.088,0.850},
	   {0.062,0.121,0.817},
	   {0.032,0.100,0.868},
	};

	static int get_discrete(double diff) {
		if ((diff >= 0.0) && (diff < 0.5)) {
			return 0;
		} else if ((diff >= 0.5) && (diff < 1.0)) {
			return 1;
		} else if ((diff >= 1.0) && (diff < 1.5)) {
			return 2;
		} else if (diff >= 1.5) {
			return 3;
		} else {
			/* error */
			return 1000;
		}
	}
}
